// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  TypedMap,
  Entity,
  Value,
  ValueKind,
  store,
  Address,
  Bytes,
  BigInt,
  BigDecimal
} from "@graphprotocol/graph-ts";

export class valFactory extends Entity {
  constructor(id: string) {
    super();
    this.set("id", Value.fromString(id));
  }

  save(): void {
    let id = this.get("id");
    assert(id !== null, "Cannot save valFactory entity without an ID");
    assert(
      id.kind == ValueKind.STRING,
      "Cannot save valFactory entity with non-string ID. " +
        'Considering using .toHex() to convert the "id" to a string.'
    );
    store.set("valFactory", id.toString(), this);
  }

  static load(id: string): valFactory | null {
    return store.get("valFactory", id) as valFactory | null;
  }

  get id(): string {
    let value = this.get("id");
    return value.toString();
  }

  set id(value: string) {
    this.set("id", Value.fromString(value));
  }

  get count(): BigInt {
    let value = this.get("count");
    return value.toBigInt();
  }

  set count(value: BigInt) {
    this.set("count", Value.fromBigInt(value));
  }

  get skinAddr(): Bytes {
    let value = this.get("skinAddr");
    return value.toBytes();
  }

  set skinAddr(value: Bytes) {
    this.set("skinAddr", Value.fromBytes(value));
  }

  get skinSalt(): BigInt {
    let value = this.get("skinSalt");
    return value.toBigInt();
  }

  set skinSalt(value: BigInt) {
    this.set("skinSalt", Value.fromBigInt(value));
  }
}

export class skin extends Entity {
  constructor(id: string) {
    super();
    this.set("id", Value.fromString(id));
  }

  save(): void {
    let id = this.get("id");
    assert(id !== null, "Cannot save skin entity without an ID");
    assert(
      id.kind == ValueKind.STRING,
      "Cannot save skin entity with non-string ID. " +
        'Considering using .toHex() to convert the "id" to a string.'
    );
    store.set("skin", id.toString(), this);
  }

  static load(id: string): skin | null {
    return store.get("skin", id) as skin | null;
  }

  get id(): string {
    let value = this.get("id");
    return value.toString();
  }

  set id(value: string) {
    this.set("id", Value.fromString(value));
  }

  get name(): string {
    let value = this.get("name");
    return value.toString();
  }

  set name(value: string) {
    this.set("name", Value.fromString(value));
  }

  get owner(): Bytes {
    let value = this.get("owner");
    return value.toBytes();
  }

  set owner(value: Bytes) {
    this.set("owner", Value.fromBytes(value));
  }

  get price(): BigInt {
    let value = this.get("price");
    return value.toBigInt();
  }

  set price(value: BigInt) {
    this.set("price", Value.fromBigInt(value));
  }

  get vfx(): boolean {
    let value = this.get("vfx");
    return value.toBoolean();
  }

  set vfx(value: boolean) {
    this.set("vfx", Value.fromBoolean(value));
  }
}
