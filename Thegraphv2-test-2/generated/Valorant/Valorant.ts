// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class SkinCreated extends ethereum.Event {
  get params(): SkinCreated__Params {
    return new SkinCreated__Params(this);
  }
}

export class SkinCreated__Params {
  _event: SkinCreated;

  constructor(event: SkinCreated) {
    this._event = event;
  }

  get skinAddr(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get skinSalt(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Valorant extends ethereum.SmartContract {
  static bind(address: Address): Valorant {
    return new Valorant("Valorant", address);
  }

  createContractwithArguments(
    _name: string,
    _price: BigInt,
    _vfx: boolean
  ): Address {
    let result = super.call(
      "createContractwithArguments",
      "createContractwithArguments(string,uint256,bool):(address)",
      [
        ethereum.Value.fromString(_name),
        ethereum.Value.fromUnsignedBigInt(_price),
        ethereum.Value.fromBoolean(_vfx)
      ]
    );

    return result[0].toAddress();
  }

  try_createContractwithArguments(
    _name: string,
    _price: BigInt,
    _vfx: boolean
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "createContractwithArguments",
      "createContractwithArguments(string,uint256,bool):(address)",
      [
        ethereum.Value.fromString(_name),
        ethereum.Value.fromUnsignedBigInt(_price),
        ethereum.Value.fromBoolean(_vfx)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getSkinLength(): BigInt {
    let result = super.call("getSkinLength", "getSkinLength():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getSkinLength(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getSkinLength",
      "getSkinLength():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  skinIDtoAddress(param0: BigInt): Address {
    let result = super.call(
      "skinIDtoAddress",
      "skinIDtoAddress(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toAddress();
  }

  try_skinIDtoAddress(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "skinIDtoAddress",
      "skinIDtoAddress(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ChangeSkinPriceCall extends ethereum.Call {
  get inputs(): ChangeSkinPriceCall__Inputs {
    return new ChangeSkinPriceCall__Inputs(this);
  }

  get outputs(): ChangeSkinPriceCall__Outputs {
    return new ChangeSkinPriceCall__Outputs(this);
  }
}

export class ChangeSkinPriceCall__Inputs {
  _call: ChangeSkinPriceCall;

  constructor(call: ChangeSkinPriceCall) {
    this._call = call;
  }

  get skinAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _price(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ChangeSkinPriceCall__Outputs {
  _call: ChangeSkinPriceCall;

  constructor(call: ChangeSkinPriceCall) {
    this._call = call;
  }
}

export class CreateContractwithArgumentsCall extends ethereum.Call {
  get inputs(): CreateContractwithArgumentsCall__Inputs {
    return new CreateContractwithArgumentsCall__Inputs(this);
  }

  get outputs(): CreateContractwithArgumentsCall__Outputs {
    return new CreateContractwithArgumentsCall__Outputs(this);
  }
}

export class CreateContractwithArgumentsCall__Inputs {
  _call: CreateContractwithArgumentsCall;

  constructor(call: CreateContractwithArgumentsCall) {
    this._call = call;
  }

  get _name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _price(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _vfx(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class CreateContractwithArgumentsCall__Outputs {
  _call: CreateContractwithArgumentsCall;

  constructor(call: CreateContractwithArgumentsCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}
